concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}${{ github.event_name
    == 'workflow_dispatch' && github.event.inputs.jdk_major_version || '' }}
env:
  ARTIFACT_RETENTION_DAYS: 3
  JDK_DISTRIBUTION: corretto
  MAVEN_OPTS: -Xss1500k -Xmx1500m -Daether.connector.http.reuseConnections=false -Daether.connector.requestTimeout=60000
    -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.http.retryHandler.requestSentEnabled=true
    -Dmaven.wagon.http.serviceUnavailableRetryStrategy.class=standard -Dmaven.wagon.rto=60000
jobs:
  build-and-test:
    env:
      CI_JDK_MAJOR_VERSION: ${{ needs.preconditions.outputs.jdk_major_version }}
      COLLECT_COVERAGE: ${{ needs.preconditions.outputs.collect_coverage }}
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      JOB_NAME: Flaky tests suite
      THREAD_LEAK_DETECTOR_DIR: ${{ github.workspace }}/target/thread-leak-dumps
      THREAD_LEAK_DETECTOR_WAIT_MILLIS: ${{ github.event_name == 'workflow_dispatch'
        && github.event.inputs.thread_leak_detector_wait_millis || 10000 }}
      TRACE_TEST_RESOURCE_CLEANUP: ${{ github.event_name == 'workflow_dispatch' &&
        github.event.inputs.trace_test_resource_cleanup || 'off' }}
      TRACE_TEST_RESOURCE_CLEANUP_DIR: ${{ github.workspace }}/target/trace-test-resource-cleanup
    if: ${{ needs.preconditions.outputs.docs_only != 'true' }}
    name: Flaky tests suite
    needs: preconditions
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      if: ${{ env.TRACE_TEST_RESOURCE_CLEANUP != 'off' }}
      name: Clean Disk when tracing test resource cleanup
      uses: ./.github/actions/clean-disk
    - continue-on-error: true
      if: ${{ github.repository != 'apache/pulsar' && github.event_name == 'pull_request'
        }}
      name: Setup ssh access to build runner VM
      uses: ./.github/actions/ssh-access
      with:
        limit-access-to-actor: true
    - continue-on-error: true
      name: Cache local Maven repository
      timeout-minutes: 5
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-dependencies-core-modules-${{ hashFiles('**/pom.xml')
          }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/pulsar

          '
        restore-keys: '${{ runner.os }}-m2-dependencies-core-modules-

          '
    - continue-on-error: true
      name: Set up JDK ${{ env.CI_JDK_MAJOR_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.CI_JDK_MAJOR_VERSION }}
    - continue-on-error: true
      name: Build core-modules
      run: 'mvn -B -T 1C -ntp -Pcore-modules,-main clean install -DskipTests -Dlicense.skip=true
        -Drat.skip=true

        '
    - continue-on-error: true
      name: Run unit test group BROKER_FLAKY
      run: 'CHANGED_TESTS="${{ needs.preconditions.outputs.tests_files }}" ./build/run_unit_group.sh
        BROKER_FLAKY

        '
    - continue-on-error: true
      if: cancelled()
      name: print JVM thread dumps when cancelled
      run: $GITHUB_WORKSPACE/build/pulsar_ci_tool.sh print_thread_dumps
    - continue-on-error: true
      if: ${{ always() }}
      name: Aggregates all test reports to ./test-reports and ./surefire-reports directories
      uses: ./.github/actions/copy-test-reports
    - continue-on-error: true
      if: ${{ always() }}
      name: Publish Test Report
      uses: apache/pulsar-test-infra/action-junit-report@master
      with:
        annotate_only: 'true'
        report_paths: test-reports/TEST-*.xml
    - continue-on-error: true
      if: ${{ always() }}
      name: Report detected thread leaks
      run: "if [ -d \"$THREAD_LEAK_DETECTOR_DIR\" ]; then\n  cd \"$THREAD_LEAK_DETECTOR_DIR\"\
        \n  cat threadleak*.txt | awk '/^Summary:/ {print \"::warning::\" $0 \"\\\
        n\"; next} {print}'  \nfi\n"
    - continue-on-error: true
      if: ${{ needs.preconditions.outputs.collect_coverage == 'true' }}
      name: Create Jacoco reports
      run: "$GITHUB_WORKSPACE/build/pulsar_ci_tool.sh create_test_coverage_report\
        \ \ncd $GITHUB_WORKSPACE/target\nzip -qr jacoco_test_coverage_report_flaky.zip\
        \ jacoco_test_coverage_report || true\n"
    - continue-on-error: true
      if: ${{ needs.preconditions.outputs.collect_coverage == 'true' }}
      name: Upload Jacoco report files to build artifacts
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: ignore
        name: Jacoco-coverage-report-flaky
        path: target/jacoco_test_coverage_report_flaky.zip
        retention-days: 3
    - continue-on-error: true
      if: ${{ needs.preconditions.outputs.collect_coverage == 'true' }}
      name: Upload to Codecov
      uses: ./.github/actions/upload-coverage
      with:
        flags: unittests
    - continue-on-error: true
      if: ${{ !success() || env.TRACE_TEST_RESOURCE_CLEANUP != 'off' }}
      name: Upload Surefire reports
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: ignore
        name: Unit-BROKER_FLAKY-surefire-reports
        path: surefire-reports
        retention-days: 7
    - continue-on-error: true
      if: ${{ always() }}
      name: Upload possible heap dump, core dump or crash files
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: ignore
        name: Unit-BROKER_FLAKY-dumps
        path: '/tmp/*.hprof

          **/hs_err_*.log

          **/core.*

          ${{ env.TRACE_TEST_RESOURCE_CLEANUP_DIR }}/*

          ${{ env.THREAD_LEAK_DETECTOR_DIR }}/*

          '
        retention-days: 7
    timeout-minutes: 100
  preconditions:
    name: Preconditions
    outputs:
      changed_tests: ${{ steps.changes.outputs.tests_files }}
      collect_coverage: ${{ steps.check_coverage.outputs.collect_coverage }}
      docs_only: ${{ steps.check_changes.outputs.docs_only }}
      jdk_major_version: ${{ steps.jdk_major_version.outputs.jdk_major_version }}
      need_owasp: ${{ steps.changes.outputs.need_owasp }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: ${{ github.repository != 'apache/pulsar' && github.event_name == 'schedule'
        }}
      name: Cancel scheduled jobs in forks by default
      uses: actions/github-script@v6
      with:
        script: 'await github.rest.actions.cancelWorkflowRun({owner: context.repo.owner,
          repo: context.repo.repo, run_id: context.runId});

          process.exit(1);

          '
    - continue-on-error: true
      id: jdk_major_version
      name: Select JDK major version
      run: "# use JDK 21 for the scheduled build with cron expression '0 6 * * *'\n\
        if [[ \"${{ github.event_name == 'schedule' && github.event.schedule == '0\
        \ 6 * * *' && 'true' || 'false' }}\" == \"true\" ]]; then\n  echo \"jdk_major_version=21\"\
        \ >> $GITHUB_OUTPUT\n  exit 0\nfi\n# use JDK 17 for build unless overridden\
        \ with workflow_dispatch input\necho \"jdk_major_version=${{ github.event_name\
        \ == 'workflow_dispatch' && github.event.inputs.jdk_major_version || '17'}}\"\
        \ >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      if: ${{ github.event_name == 'pull_request' }}
      name: checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      id: changes
      if: ${{ github.event_name == 'pull_request' }}
      name: Detect changed files
      uses: apache/pulsar-test-infra/paths-filter@master
      with:
        filters: .github/changes-filter.yaml
        list-files: csv
    - continue-on-error: true
      id: check_changes
      if: ${{ github.event_name == 'pull_request' }}
      name: Check changed files
      run: "if [[ \"${GITHUB_EVENT_NAME}\" != \"schedule\" && \"${GITHUB_EVENT_NAME}\"\
        \ != \"workflow_dispatch\" ]]; then\n  echo \"docs_only=${{ fromJSON(steps.changes.outputs.all_count)\
        \ == fromJSON(steps.changes.outputs.docs_count) && fromJSON(steps.changes.outputs.docs_count)\
        \ > 0 }}\" >> $GITHUB_OUTPUT\nelse\n  echo docs_only=false >> $GITHUB_OUTPUT\n\
        fi\n"
    - continue-on-error: true
      id: check_coverage
      name: Check if coverage should be collected
      run: "echo \"collect_coverage=${{ \n(steps.check_changes.outputs.docs_only !=\
        \ 'true' && github.event_name != 'workflow_dispatch' \n  && (github.base_ref\
        \ == 'master' || github.ref_name == 'master')) \n|| (github.event_name ==\
        \ 'workflow_dispatch' && github.event.inputs.collect_coverage == 'true')\n\
        }}\"  >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      env:
        GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
        GITHUB_TOKEN: ${{ github.token }}
      if: ${{ steps.check_changes.outputs.docs_only != 'true' && github.repository
        == 'apache/pulsar' && github.event_name == 'pull_request' }}
      name: Check if the PR has been approved for testing
      run: 'build/pulsar_ci_tool.sh check_ready_to_test

        '
name: Pulsar CI Flaky
on:
  repository_dispatch:
    types: trigger-ga___pulsar-ci-flaky.yaml
