concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  MAVEN_OPTS: -Xss1500k -Xmx1024m -Daether.connector.http.reuseConnections=false -Daether.connector.requestTimeout=60000
    -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.http.retryHandler.requestSentEnabled=true
    -Dmaven.wagon.http.serviceUnavailableRetryStrategy.class=standard -Dmaven.wagon.rto=60000
jobs:
  check-style:
    if: ${{ needs.preconditions.outputs.docs_only != 'true' }}
    name: Go ${{ matrix.go-version }} Functions style check
    needs: preconditions
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      id: go
      name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    - continue-on-error: true
      name: InstallTool
      run: 'cd pulsar-function-go

        wget -O - -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh|
        sh -s v1.55.2

        ./bin/golangci-lint --version

        '
    - continue-on-error: true
      name: Build
      run: 'cd pulsar-function-go

        export GO111MODULE=on

        go build ./...

        '
    - continue-on-error: true
      name: Test
      run: 'cd pulsar-function-go

        export GO111MODULE=on

        ./bin/golangci-lint run -c ./golangci.yml ./pf

        go test -v $(go list ./... | grep -v examples)

        '
    strategy:
      matrix:
        go-version:
        - '1.21'
  preconditions:
    name: Preconditions
    outputs:
      docs_only: ${{ steps.check_changes.outputs.docs_only }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      id: changes
      name: Detect changed files
      uses: apache/pulsar-test-infra/paths-filter@master
      with:
        filters: .github/changes-filter.yaml
        list-files: csv
    - continue-on-error: true
      id: check_changes
      name: Check changed files
      run: "if [[ \"${GITHUB_EVENT_NAME}\" != \"schedule\" ]]; then\n  echo \"docs_only=${{\
        \ fromJSON(steps.changes.outputs.all_count) == fromJSON(steps.changes.outputs.docs_count)\
        \ && fromJSON(steps.changes.outputs.docs_count) > 0 }}\" >> $GITHUB_OUTPUT\n\
        else\n  echo docs_only=false >> $GITHUB_OUTPUT\nfi\n"
    - continue-on-error: true
      env:
        GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
        GITHUB_TOKEN: ${{ github.token }}
      if: ${{ steps.check_changes.outputs.docs_only != 'true' && github.repository
        == 'apache/pulsar' && github.event_name == 'pull_request' }}
      name: Check if the PR has been approved for testing
      run: 'build/pulsar_ci_tool.sh check_ready_to_test

        '
name: CI - Go Functions
on:
  repository_dispatch:
    types: trigger-ga___ci-go-functions.yaml
