env:
  JDK_DISTRIBUTION: corretto
  MAVEN_OPTS: -Xss1500k -Xmx1024m -Daether.connector.http.reuseConnections=false -Daether.connector.requestTimeout=60000
    -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.http.retryHandler.requestSentEnabled=true
    -Dmaven.wagon.http.serviceUnavailableRetryStrategy.class=standard -Dmaven.wagon.rto=60000
jobs:
  update-maven-dependencies-cache:
    env:
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      JOB_NAME: Update Maven dependency cache for ${{ matrix.name }}
    name: Update Maven dependency cache for ${{ matrix.name }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      id: changes
      if: ${{ github.event_name != 'schedule' }}
      name: Detect changed files
      uses: apache/pulsar-test-infra/paths-filter@master
      with:
        filters: "poms:\n  - 'pom.xml'\n  - '**/pom.xml'\n"
    - continue-on-error: true
      id: cache
      if: ${{ github.event_name == 'schedule' || steps.changes.outputs.poms == 'true'
        }}
      name: Cache local Maven repository
      timeout-minutes: 5
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-${{ matrix.cache_name }}-${{ hashFiles('**/pom.xml')
          }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/pulsar

          '
    - continue-on-error: true
      if: ${{ (github.event_name == 'schedule' || steps.changes.outputs.poms == 'true')
        && steps.cache.outputs.cache-hit != 'true' }}
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: 17
    - continue-on-error: true
      if: ${{ (github.event_name == 'schedule' || steps.changes.outputs.poms == 'true')
        && steps.cache.outputs.cache-hit != 'true' }}
      name: Download dependencies
      run: '# download dependencies, ignore errors

        mvn -B -fn -ntp ${{ matrix.mvn_arguments }} dependency:go-offline'
    strategy:
      fail-fast: false
      matrix:
        include:
        - cache_name: m2-dependencies-all
          mvn_arguments: ''
          name: all modules
          runs-on: ubuntu-22.04
        - cache_name: m2-dependencies-all
          name: all modules - macos
          runs-on: macos-latest
        - cache_name: m2-dependencies-core-modules
          mvn_arguments: -Pcore-modules,-main
          name: core-modules
          runs-on: ubuntu-22.04
    timeout-minutes: 45
name: CI - Maven Dependency Cache Update
on:
  repository_dispatch:
    types: trigger-ga___ci-maven-cache-update.yaml
