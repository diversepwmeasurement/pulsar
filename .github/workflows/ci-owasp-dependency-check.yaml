env:
  JDK_DISTRIBUTION: corretto
  MAVEN_OPTS: -Xss1500k -Xmx1500m -Daether.connector.http.reuseConnections=false -Daether.connector.requestTimeout=60000
    -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.http.retryHandler.requestSentEnabled=true
    -Dmaven.wagon.http.serviceUnavailableRetryStrategy.class=standard -Dmaven.wagon.rto=60000
  NIST_NVD_API_KEY: ${{ secrets.NIST_NVD_API_KEY }}
jobs:
  run-owasp-dependency-check:
    env:
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      JOB_NAME: Check ${{ matrix.branch }}
    if: ${{ github.repository == 'apache/pulsar' || github.event_name == 'workflow_dispatch'
      }}
    name: Check ${{ matrix.branch }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ matrix.branch }}
    - continue-on-error: true
      name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - continue-on-error: true
      name: Restore Maven repository cache
      timeout-minutes: 5
      uses: actions/cache/restore@v4
      with:
        key: ${{ runner.os }}-m2-dependencies-all-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/pulsar

          '
        restore-keys: '${{ runner.os }}-m2-dependencies-core-modules-${{ hashFiles(''**/pom.xml'')
          }}

          ${{ runner.os }}-m2-dependencies-core-modules-

          '
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk || '17' }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ matrix.jdk || '17' }}
    - continue-on-error: true
      name: run install by skip tests
      run: mvn -B -ntp clean install -DskipTests -Dspotbugs.skip=true  -Dlicense.skip=true
        -Dcheckstyle.skip=true -Drat.skip=true -DskipDocker=true -DnarPluginPhase=none
        -pl '!distribution/io,!distribution/offloaders'
    - continue-on-error: true
      id: get-weeknum
      name: OWASP cache key weeknum
      run: 'echo "weeknum=$(date -u +"%Y-%U")" >> $GITHUB_OUTPUT

        '
      shell: bash
    - continue-on-error: true
      id: restore-owasp-dependency-check-data
      name: Restore OWASP Dependency Check data
      timeout-minutes: 5
      uses: actions/cache/restore@v4
      with:
        enableCrossOsArchive: true
        key: owasp-dependency-check-data-${{ steps.get-weeknum.outputs.weeknum }}
        path: ~/.m2/repository/org/owasp/dependency-check-data
        restore-keys: 'owasp-dependency-check-data-

          '
    - continue-on-error: true
      id: update-owasp-dependency-check-data
      if: ${{ matrix.branch == 'master' && (steps.restore-owasp-dependency-check-data.outputs.cache-hit
        != 'true' || steps.restore-owasp-dependency-check-data.outputs.cache-matched-key
        != steps.restore-owasp-dependency-check-data.outputs.cache-primary-key) }}
      name: Update OWASP Dependency Check data
      run: mvn -B -ntp -Powasp-dependency-check initialize -pl . dependency-check:update-only
    - continue-on-error: true
      if: ${{ steps.update-owasp-dependency-check-data.outcome == 'success' }}
      name: Save OWASP Dependency Check data
      timeout-minutes: 5
      uses: actions/cache/save@v4
      with:
        enableCrossOsArchive: true
        key: ${{ steps.restore-owasp-dependency-check-data.outputs.cache-primary-key
          }}
        path: ~/.m2/repository/org/owasp/dependency-check-data
    - continue-on-error: true
      name: run OWASP Dependency Check for distribution/server (-DfailBuildOnAnyVulnerability=true)
      run: mvn -B -ntp -Pmain,skip-all,skipDocker,owasp-dependency-check initialize
        verify -pl distribution/server -DfailBuildOnAnyVulnerability=true
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: run OWASP Dependency Check for offloaders/tiered-storage and pulsar-io
        connectors (-DfailOnError=false)
      run: "mvnprojects=$(mvn -B -ntp -Dscan=false initialize \\\n  | grep -- \"-<\
        \ .* >-\" \\\n  | sed -E 's/.*-< (.*) >-.*/\\1/' \\\n  | grep -E 'pulsar-io-|tiered-storage-|offloader'\
        \ \\\n  | tr '\\n' ',' | sed 's/,$/\\n/' )\nset -xe\nmvn --fail-at-end -B\
        \ -ntp -Pmain,skip-all,skipDocker,owasp-dependency-check initialize verify\
        \ -DfailOnError=false -pl \"${mvnprojects}\"\n"
    - continue-on-error: true
      if: always()
      name: Upload OWASP Dependency Check reports
      uses: actions/upload-artifact@v4
      with:
        name: owasp-dependency-check-reports-${{ matrix.branch }}
        path: '**/target/dependency-check-report.html'
    strategy:
      fail-fast: false
      matrix:
        include:
        - branch: master
        - branch: branch-3.3
        - branch: branch-3.2
        - branch: branch-3.0
      max-parallel: 1
    timeout-minutes: 75
name: CI - OWASP Dependency Check
on:
  repository_dispatch:
    types: trigger-ga___ci-owasp-dependency-check.yaml
